diff --git a/CMakeLists.txt b/CMakeLists.txt
index 91ac63d5e50..5697f473236 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -24,6 +24,10 @@
 # all out-of-source builds will use the CMakeCache.txt file there and even
 # build the libs and objects in it.
 
+if (WIN32)
+	set(CMAKE_SYSTEM_VERSION 10.0 (latest installed version))
+endif ()
+
 if(${CMAKE_SOURCE_DIR} STREQUAL ${CMAKE_BINARY_DIR})
   if(NOT DEFINED WITH_IN_SOURCE_BUILD)
     message(FATAL_ERROR
diff --git a/build_files/windows/check_libraries.cmd b/build_files/windows/check_libraries.cmd
index c495ee6eee9..ee875ec876b 100644
--- a/build_files/windows/check_libraries.cmd
+++ b/build_files/windows/check_libraries.cmd
@@ -36,6 +36,24 @@ if NOT EXIST %BUILD_VS_LIBDIR% (
 				echo.
 				exit /b 1
 			)
+
+:RETRYBCOMPAT
+			"%SVN%" checkout https://github.com/nalexandru/BlenderCompat/trunk/bin %BUILD_VS_LIBDIR%/bcompat7
+			if errorlevel 1 (
+				set /p LibRetry= "Error during download, retry? y/n"
+				if /I "!LibRetry!"=="Y" (
+					cd %BUILD_VS_LIBDIR%
+					"%SVN%" cleanup
+					cd %BLENDER_DIR%
+					goto RETRYBCOMPAT
+				)
+				echo.
+				echo Error: Download of external libraries failed.
+				echo This is needed for building, please manually run 'svn cleanup' and 'svn update' in
+				echo %BUILD_VS_LIBDIR% , until this is resolved you CANNOT make a successful blender build
+				echo.
+				exit /b 1
+			)
 		)
 	)
 ) else (
@@ -47,6 +65,8 @@ if NOT EXIST %BUILD_VS_LIBDIR% (
 			"%SVN%" update %BUILD_VS_LIBDIR%
 		)
 	)
+
+	"%SVN%" update %BUILD_VS_LIBDIR%/bcompat7
 )
 
 if NOT EXIST %BUILD_VS_LIBDIR% (
@@ -58,4 +78,4 @@ if NOT EXIST %BUILD_VS_LIBDIR% (
 		echo This is most likely caused by svn.exe not being available.
 	)
 	exit /b 1
-)
\ No newline at end of file
+)
diff --git a/source/creator/CMakeLists.txt b/source/creator/CMakeLists.txt
index a4b32fac9fc..7fa8868c571 100644
--- a/source/creator/CMakeLists.txt
+++ b/source/creator/CMakeLists.txt
@@ -51,6 +51,9 @@ if(WITH_TBB)
   list(INSERT LIB 0 bf_blenkernel)
 endif()
 
+link_directories(${LIBDIR}/bcompat7/lib)
+list(INSERT LIB 0 bcompat7)
+
 if(WIN32)
   blender_include_dirs(../../intern/utfconv)
 endif()
@@ -962,6 +965,12 @@ elseif(WIN32)
       DESTINATION ${TARGETDIR_VER}/python/lib/site-packages
     )
   endif()
+
+  install(
+    FILES ${LIBDIR}/bcompat7/bin/bcompat7.dll
+    DESTINATION "."
+    CONFIGURATIONS Release;RelWithDebInfo;MinSizeRel;Debug
+  )
 elseif(APPLE)
   if(NOT WITH_PYTHON_MODULE)
     # Uppercase name for app bundle
